package br.com.ztech.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.ztech.controller.dto.ContaDto;
import br.com.ztech.controller.dto.converter.ContaConverterContaDto;
import br.com.ztech.controller.request.MovimentacaoContaRequest;
import br.com.ztech.service.RetirarService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
@RequestMapping("conta")
public class RetirarController {
	
	@Autowired
	private RetirarService retirarService;
	
	@Autowired
	private ContaConverterContaDto contaConverterContaDto;
	
	@PutMapping("/retirar/{agencia}/{numeroConta}")
	public ResponseEntity<ContaDto> retirar(@PathVariable Integer agencia, 
			@PathVariable Long numeroConta, 
				@RequestBody @Valid MovimentacaoContaRequest movimentacaoContaRequest) {
		
		log.info("retirar agencia {}, numeroConta {}, {}", agencia, numeroConta, movimentacaoContaRequest);
				
		final var valorMovimentacao = movimentacaoContaRequest.getValor();
		
		final var contaAtualizada = retirarService.retirar(agencia, numeroConta, valorMovimentacao);
		
		log.info("Deposito efetuado com sucesso na {}", contaAtualizada );
		
		return new ResponseEntity<>( contaConverterContaDto.convert( contaAtualizada ), HttpStatus.OK);
	}
	
	@PutMapping("/retirar/{cpf}")
	public ResponseEntity<ContaDto> retirar(@PathVariable String cpf,
			@RequestBody @Valid MovimentacaoContaRequest movimentacaoContaRequest) {
		
		log.info("retirar cpf {}, {}", cpf, movimentacaoContaRequest);
		
		final var valorMovimentacao = movimentacaoContaRequest.getValor();
		
		final var contaAtualizada = retirarService.retirar(cpf, valorMovimentacao);
		
		log.info("Deposito efetuado com sucesso na {}", contaAtualizada );
		
		return new ResponseEntity<>( contaConverterContaDto.convert( contaAtualizada ), HttpStatus.OK);
	}
}