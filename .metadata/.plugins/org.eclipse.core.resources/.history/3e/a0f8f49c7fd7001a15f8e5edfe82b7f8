package br.com.ztech.controller.dto.converter;

import java.math.MathContext;
import java.math.RoundingMode;
import java.util.Objects;
import java.util.stream.Collectors;

import org.springframework.context.annotation.Configuration;
import org.springframework.core.convert.converter.Converter;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;

import br.com.ztech.controller.dto.ClienteDto;
import br.com.ztech.controller.dto.ContaExtratoDto;
import br.com.ztech.controller.dto.ExtratoDto;
import br.com.ztech.controller.dto.TipoExtratoDto;
import br.com.ztech.domain.Transacao;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Configuration
public class TransacoesConverterExtratoDto implements Converter<Page<Transacao>, Page<ExtratoDto>> {

	@Override
	public Page<ExtratoDto> convert(Page<Transacao> source) {

		log.info("TransacoesConverterExtratoDto convert {}", source);

		return new PageImpl<ExtratoDto>(
				 source
				.stream()
				.map(t -> new ExtratoDto( t.getData(), 
						t.getValorSaldo().round(new MathContext(2, RoundingMode.HALF_UP)), 
						t.getValorMovimentacao().round(new MathContext(2, RoundingMode.HALF_UP)), 
						t.getPorcentagemMovimentacao().round(new MathContext(2, RoundingMode.HALF_UP)), 
						t.getValorTransacao().round(new MathContext(2, RoundingMode.HALF_UP)), 
						t.getValorSaldoAtualizado().round(new MathContext(2, RoundingMode.HALF_UP)), 
						new TipoExtratoDto(t.getTipoTransacao().getNome()), 
						getContaExtratoDto(t)))
				.collect(Collectors.toList()), source.getPageable(), source.getTotalElements());

	}
	
	private ContaExtratoDto getContaExtratoDto(Transacao t) {

		if(Objects.nonNull(t.getContaTrasancao())) {

			return new ContaExtratoDto(
					
					new ClienteDto(
					
							t.getContaTrasancao().getCliente().getNome(), 
							t.getContaTrasancao().getCliente().getCpf()),  
					
					t.getContaTrasancao().getAgencia(), 
					t.getContaTrasancao().getNumeroConta());

		}

		return null;
	}
}