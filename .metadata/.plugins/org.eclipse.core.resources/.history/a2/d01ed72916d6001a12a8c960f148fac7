package br.com.ztech.controller;

import java.util.stream.Collectors;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.core.convert.converter.Converter;
import br.com.ztech.controller.dto.ExtratoDto;
import br.com.ztech.controller.dto.converter.TransacoesConverterExtratoDto;
import br.com.ztech.domain.Transacao;
import br.com.ztech.service.ExtratoService;

@RestController
@RequestMapping("conta")
public class ExtratoController {
	
	private final static Logger logger = LogManager.getLogger(ExtratoController.class);
	
	@Autowired
	private ExtratoService extratoService;
	
	@Autowired
	private TransacoesConverterExtratoDto transacoesConverterExtratoDto;
	
	@GetMapping("/extrato/{agencia}/{numeroConta}")
	public ResponseEntity<Page<ExtratoDto>> extrato(@PathVariable Integer agencia, @PathVariable Long numeroConta, Pageable pageable) {	
		
		logger.info("extrato agencia {}, numeroConta {}", agencia, numeroConta);
		
		final var conta = extratoService.buscarConta(agencia, numeroConta);

		final var transacoes = extratoService.buscarTransacoes(conta, pageable);
		
		logger.info("Extrato encontrado com sucesso!");
		
		

        int totalElements = (int) transacoes.getTotalElements();
       var teste =  new PageImpl<ExtratoDto>(transacoes
                .stream()
                .map(person -> teste(person)   )
                .collect(Collectors.toList()), pageable, totalElements);
		
		
		
		//return new ResponseEntity<>( transacoes, HttpStatus.OK);
		
		//return new ResponseEntity<>( transacoesConverterExtratoDto.convert( transacoes, pageable ), HttpStatus.CREATED);
		return teste;
	}
	
	public ExtratoDto teste(Transacao t) {
		
		return null;
	}
	
	@GetMapping("/extrato/{cpf}")
	public ResponseEntity<Page<Transacao>> extrato(@PathVariable String cpf, Pageable pageable) {	
		
		logger.info("extrato cpf {}", cpf);
		
		final var conta = extratoService.buscarConta(cpf);

		final var transacoes = extratoService.buscarTransacoes(conta, pageable);
		
		logger.info("Extrato encontrado com sucesso!");
		
		return new ResponseEntity<>( transacoes, HttpStatus.OK);
		
		//return new ResponseEntity<>( transacoesConverterExtratoDto.convert( transacoes ), HttpStatus.OK);
	}
}